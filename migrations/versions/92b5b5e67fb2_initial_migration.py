"""Initial migration.

Revision ID: 92b5b5e67fb2
Revises: 
Create Date: 2024-01-25 15:14:49.827738

"""
from alembic import op
import sqlalchemy as sa
from werkzeug.security import generate_password_hash

# revision identifiers, used by Alembic.
revision = '92b5b5e67fb2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    role_table = op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    user_table = op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('refresh_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('blocked', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('expire_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('refresh_token', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_refresh_token_jti'), ['jti'], unique=False)

    user_role_table = op.create_table('user_role',
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('access_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('expire_date', sa.DateTime(), nullable=False),
    sa.Column('refresh_token_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['refresh_token_id'], ['refresh_token.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('access_token', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_access_token_jti'), ['jti'], unique=False)

    # ### end Alembic commands ###

    # ### Init data
    # #### Auth
    bulk_roles = [{"id": 1, "name": "admin"}, {"id": 2, "name": "user"}]
    op.bulk_insert(role_table, bulk_roles)

    bulk_users = [{"id": 1, "username": "admin", "password_hash": generate_password_hash("123456")}]
    op.bulk_insert(user_table, bulk_users)

    bulk_user_roles = [{"id": 1, "role_id": 1, "user_id": 1}]
    op.bulk_insert(user_role_table, bulk_user_roles)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('access_token', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_access_token_jti'))

    op.drop_table('access_token')
    op.drop_table('user_role')
    with op.batch_alter_table('refresh_token', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_refresh_token_jti'))

    op.drop_table('refresh_token')
    op.drop_table('user')
    op.drop_table('role')
    # ### end Alembic commands ###
